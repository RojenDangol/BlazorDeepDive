@page "/todolist"

@rendermode InteractiveServer

<h3>To Do</h3>
<br />
<button type="button" class="btn btn-primary mb-3" @onclick="AddTask">Add Task</button>

@if(items != null && items.Count > 0)
{
    <ul class="list-unstyled">
        @foreach (var item in items)
        {
            <li @key="item.Id" >
                <div class ="row mb-2">
                    <div class="col-1" style="width:30px">
                        <input style="vertical-align:middle"
                            type="checkbox" 
                            class="form-check-input" 
                            @bind-value="item.IsCompleted" 
                            checked="@item.IsCompleted"/>
                    </div>
                    <div class="col">
                        @if (item.IsCompleted)
                        {
                            <input type="text" class="form-control border-0 text-decoration-line-through" @bind-value="@item.Name" style="vertical-align:middle" disabled />
                        }
                        else
                        {
                            <input type="text" class="form-control border-0" @bind-value="@item.Name" style="vertical-align:middle" />
                        }
                    </div>
                    <div class="col">
                        @if (item.IsCompleted)
                        {
                            <text>Completed at: @item.DateCompleted.ToLongDateString()</text>
                        }
                    </div>
                    
                </div>
            </li>
        }
    </ul>
}
else
{
    <p>No items found.</p>
}



@code {
    private List<ToDoItem> items = ToDoItemsRepository.GetItems();

    private void AddTask()
    {
        ToDoItemsRepository.AddItem(new ToDoItem {Name = "New Task"});
        items = ToDoItemsRepository.GetItems();
    }
}
